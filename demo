from flask import Flask, request, jsonify
from flask_cors import CORS
import whisper
import os
from werkzeug.utils import secure_filename

app = Flask(__name__)
CORS(app)  # Enable CORS for all routes (modify for production)

# Allowed audio formats
ALLOWED_EXTENSIONS = {"wav", "mp3", "m4a", "flac", "ogg"}

# Upload folder
UPLOAD_FOLDER = "uploads"
os.makedirs(UPLOAD_FOLDER, exist_ok=True)
app.config["UPLOAD_FOLDER"] = UPLOAD_FOLDER

# Load Whisper model
try:
    model = whisper.load_model("base")  # You can use "tiny", "small", "medium", or "large" based on accuracy/speed tradeoff
    print("‚úÖ Whisper model loaded successfully.")
except Exception as e:
    print(f"‚ùå Error loading Whisper model: {e}")
    model = None

# Function to check allowed file types
def allowed_file(filename):
    return "." in filename and filename.rsplit(".", 1)[1].lower() in ALLOWED_EXTENSIONS

# Route: Home
@app.route("/", methods=["GET"])
def home():
    return "üéâ Whisper API is running!", 200

# Route: Transcribe audio
@app.route("/transcribe", methods=["POST"])
def transcribe():
    if "file" not in request.files:
        return jsonify({"error": "No file provided"}), 400

    file = request.files["file"]

    if file.filename == "":
        return jsonify({"error": "No file selected"}), 400

    if not allowed_file(file.filename):
        return jsonify({"error": "Invalid file format"}), 400

    if model is None:
        return jsonify({"error": "Whisper model not loaded"}), 500

    # Save the uploaded file
    filename = secure_filename(file.filename)
    filepath = os.path.join(app.config["UPLOAD_FOLDER"], filename)
    file.save(filepath)

    try:
        # Transcribe the audio (use fp16=False if no GPU)
        result = model.transcribe(filepath, fp16=False)
        transcription = result.get("text", "No transcription found")
    except Exception as e:
        return jsonify({"error": f"Transcription failed: {str(e)}"}), 500
    finally:
        # Clean up: Delete the file after processing
        if os.path.exists(filepath):
            os.remove(filepath)

    return jsonify({"transcription": transcription})

# Run the Flask app
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
